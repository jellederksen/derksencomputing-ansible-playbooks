#Before executing this role, create the backup repo on the Borgbase website,
#generate a ssh-keypair, and upload the public-key to Borgbase and connect to
#the remote backup-server to store the server's ssh fingerprint. Automating
#these steps with the Borgbase API is on the TODO list. For now this role
#provides a working remote backup solution.

---
# tasks file for backup

- name: "Ensure Borgbackup dependencies are installed"
  pkgng:
    name: "{{ item }}"
    state: present
  with_items:
    - python37
    - py37-pip
    - openssl
    - pkgconf
    - git

- name: "Ensure Borgbackup is installed"
  portinstall:
    name: "{{ item }}"
    state: present
  with_items:
    - "archivers/py-borgbackup"

#Initialize the remote Borg archive. If the remote Borg archive already
#exists, the command will exit with return code 2. We will ignore this
#exit code and continue. This task will report changed when the archive
#initialized for the first time.
- name: "Ensure borg backup is initialized"
  shell: "/usr/local/bin/borg init --encryption=repokey-blake2 {{ borgbase_repo }}"
  environment:
    BORG_PASSPHRASE: "{{ borgbase_passphrase }}"
  register: borg_repo_initialized
  changed_when: borg_repo_initialized.rc == 0
  failed_when:
    - borg_repo_initialized.rc != 0
    - borg_repo_initialized.rc != 2

- name: "Ensure Borg repo key is exported"
  shell: "/usr/local/bin/borg key export {{ borgbase_repo }} /root/borg_base_key_export"
  args:
    creates: /root/borg_base_key_export

- name: "Ensure the Borg Archive password is present"
  cron:
    name: BORG_PASSPHRASE
    env: yes
    job: "{{ borgbase_passphrase }}"
    user: root
    cron_file: /etc/crontab

- name: "Ensure old Borg archives are removed from repo"
  cron:
    name: "Prune old Borg archives"
    minute: 0
    hour: 1
    user: root
    job: '/usr/local/bin/borg prune --keep-daily=7 --keep-weekly=4 --keep-monthly=12 --keep-yearly=1 "{{ borgbase_repo }}"'
    cron_file: /etc/crontab

- name: "Ensure Daily backup to Borgbase remote repo"
  cron:
    name: "Create daily Borg backup"
    minute: 0
    hour: 3
    user: root
    job: '/usr/local/bin/borg create "{{ borgbase_repo }}::$(/bin/date +%Y%m%d)" {{ borg_to_backup }}'
    cron_file: /etc/crontab
