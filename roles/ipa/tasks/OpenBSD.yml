---

- name: "Ensure ldap and kerberos packages are installed"
  openbsd_pkg:
    name: "{{ item }}"
    state: present
  loop:
    - login_ldap
    - heimdal
    - heimdal-libs
    - login_krb5

- name: "Ensure user management config"
  template:
    src: templates/OpenBSD/login.conf.j2
    dest: /etc/login.conf
    owner: root
    group: wheel
    mode: 0644
  register: login_conf

- name: "Ensure login.conf capabilities database"
  command: /usr/bin/cap_mkdb /etc/login.conf
  when: login_conf.changed

- name: "Ensure user ldap config"
  template:
    src: templates/OpenBSD/ypldap.conf.j2
    dest: /etc/ypldap.conf
    owner: root
    group: wheel
    mode: 0600
  #notify: restart_ypldap

- name: "Ensure the domainname is set"
  template:
    src: templates/OpenBSD/defaultdomain.j2
    dest: /etc/defaultdomain
    owner: root
    group: wheel
    mode: 0644
  register: domainname_file

- name: "Ensure yp domainname is set"
  command: domainname galaxy.derksencomputing.nl
  when: domainname_file.changed

- name: "Ensure password file is setup for ypldap"
  lineinfile:
    path: /etc/master.passwd
    regexp: '^\+:\*::::::::$'
    line: '+:*::::::::'
  register: master_passwd

- name: "Ensure master password database"
  command: /usr/sbin/pwd_mkdb -p /etc/master.passwd
  when: master_passwd.changed

- name: "Ensure group file is setup for ypldap"
  lineinfile:
    path: /etc/group
    regexp: '^\+:\*::$'
    line: '+:*::'

- name: "Ensure portmap is enabled and started"
  service:
    name: portmap
    state: started
    enabled: true

- name: "Ensure ypldap is enabled and started"
  service:
    name: ypldap
    state: started
    enabled: true

- name: "Ensure ypbind is enabled and started"
  service:
    name: ypbind
    state: started
    enabled: true

- name: "Ensure heimdal libs are available"
  lineinfile:
    path: /etc/rc.conf.local
    regexp: '^shlib_dirs=/usr/local/heimdal/lib$'
    line: shlib_dirs=/usr/local/heimdal/lib

- name: "Ensure heimdal tools are in PATH skel"
  lineinfile:
    path: /etc/skel/.profile
    regexp: 'PATH="\$PATH:/usr/local/heimdal/bin"'
    line: PATH="$PATH:/usr/local/heimdal/bin"

- name: "Ensure krb5 main config file"
  template:
    src: templates/FreeBSD/krb5.conf.j2
    dest: /etc/krb5.conf

- name: "Ensure user kerberos config"
  template:
    src: templates/OpenBSD/krb5.conf.j2
    dest: /etc/heimdal/krb5.conf
    owner: root
    group: wheel
    mode: 0644

- name: "Ensure kerberos keytab is available"
  stat:
    path: /etc/krb5.keytab
  register: stat_kerberos_keytab

- name: "Ensure Kerberos keytab file is fetched from IPA server and stored in Keytab file"
  block:
    #We must use the raw module to delegate the command and slurp task To the
    #FreeIPA server because of this bug: https://github.com/ansible/ansible/issues/63180
    #Ansible uses the FreeBSD path to the Python interpreter on the FreeIPA hosts.
    #- name: "Get Kerberos keytab om IPA server"
    #  command: "/usr/sbin/ipa-getkeytab --keytab=/tmp/krb5_{{ ansible_hostname }}.keytab --principal=host/{{ inventory_hostname }}"
    #  delegate_to: vega.galaxy.derksencomputing.nl

    #- name: "Get host's Kerberos keytab from IPA server"
    #  slurp:
    #    src: "/tmp/krb5_{{ ansible_hostname }}.keytab"
    #  delegate_to: vega.galaxy.derksencomputing.nl
    #  register: kerberos_keytab

    #Raw module as workaround for bug 63180
    - name: "Get Kerberos keytab from IPA server"
      raw: "{{ item }}"
      args:
        executable: /bin/sh
      delegate_to: vega.galaxy.derksencomputing.nl
      with_items:
        - "echo '{{ ipa_admin_pass }}' | /usr/bin/kinit admin"
        - "/usr/sbin/ipa-getkeytab --keytab=/tmp/krb5_{{ ansible_hostname }}.keytab --principal=host/{{ inventory_hostname }}"
        - "/usr/bin/base64 /tmp/krb5_{{ ansible_hostname }}.keytab"
        - "/bin/rm /tmp/krb5_{{ ansible_hostname }}.keytab"
      register: kerberos_keytab
      #no_log: True

    #We use the template function to copy the fetched base64 keytab to the remote host.
    #This prefents echoing a large base64 string on the commandline and redirecting it
    #to the keytab file.
    - name: "Ensure krb5 keytab file"
      template:
        src: templates/FreeBSD/krb5.keytab.j2
        dest: /etc/krb5.keytab
  when: (stat_kerberos_keytab.stat.exists == False) or (update_kerberos_keytab.changed == True)
