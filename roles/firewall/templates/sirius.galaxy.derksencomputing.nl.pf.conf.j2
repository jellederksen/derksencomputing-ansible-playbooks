#Ansible information:
#    Filename: {{ template_path | regex_replace(".*/ansible[^/]*", "..") }}
#    Filedate: {{ template_mtime | regex_replace("\..*$", "")  }}
#    Hostname: {{ template_host }}

#macros
ext_if="pppoe0"
lan_if="vio1"
wls_if="vio2"
dmz_if="vio3"
cld_if="enc0"
kam_if="vio4"

ext_ip="45.83.232.124"
lan_ip="10.0.0.1"
wls_ip="10.0.1.1"
dmz_ip="172.16.0.1"
kam_ip="192.168.0.1"
cld_ip="172.16.0.1"

ext_net="45.83.232.124/32"
lan_net="10.0.0.0/24"
wls_net="10.0.1.0/24"
dmz_net="172.16.0.0/24"
cld_net="172.16.1.0/24"
kam_net="192.168.0.0/24"

table <wormhole> { 45.83.232.124 }
table <blackhole> { 149.210.150.253 }
table <quasar> { 136.144.215.240 }

table <algol> { 172.16.1.1 }
table <antares> { 172.16.1.2 }
table <sirius> { 172.16.0.1 }
table <alcor> { 172.16.0.2 }
table <naos> { 172.16.0.3 }
table <altair> { 172.16.0.4 }
table <alnitak> { 172.16.0.5 }
table <procyon> { 172.16.0.6 }
table <sun> { 10.0.1.2 }
table <vega> { 10.0.1.3 }

table <rocky_mirrors> { 151.101.38.132 }
table <freebsd_mirrors> { 163.237.247.16, 204.15.11.69, 213.138.116.73, 139.178.72.201 163.237.247.16 204.15.11.69 }
table <openbsd_mirrors> { 151.101.2.217, 151.101.66.217, 151.101.130.217, 151.101.194.217, 145.220.21.40, 151.101.38.217 }
table <python_mirrors> { 151.101.36.223, 151.101.128.223, 151.101.0.223, 151.101.192.223, 151.101.64.223, 151.101.65.63, 151.101.129.63, 151.101.1.63, 151.101.193.63 151.101.37.63 }
table <hashicorp_vault> { 151.101.38.49 }
table <google_dns> { 8.8.8.8, 8.8.4.4 }
table <google_time> { 216.239.35.0, 216.239.35.4 216.239.35.8, 216.239.35.12 }
table <github> { 140.82.112.0/20, 185.199.110.133, 185.199.111.133, 185.199.108.133 }
table <grafana> { 151.101.38.217 }
table <homeassistant_mirrors> { 104.26.4.238, 104.26.5.238, 172.67.68.90 }
table <philips_hue> { 34.117.13.189 }
table <weather_api> { 157.249.177.128 }
table <elastic_repo> { 34.120.127.130 }
table <borgbase> { 95.216.114.43 }

#options
set skip on lo0
set block-policy return
set loginterface $ext_if
set state-policy if-bound
set debug emerg
set limit states 10000
set optimization normal
set reassemble yes

match in all scrub (random-id)

#default queue's
queue rootq on $ext_if bandwidth 200M max 200M
queue defaultq parent rootq bandwidth 100M max 100M default

#download queue's
queue lanq parent rootq bandwidth 100M max 100M
queue wlsq parent rootq bandwidth 100M max 100M
queue dmzq parent rootq bandwidth 100M max 100M
queue kamq parent rootq bandwidth 100M max 100M

#upload queue's
queue lan_ackq parent rootq bandwidth 1M max 1M
queue wls_ackq parent rootq bandwidth 1M max 1M
queue dmz_ackq parent rootq bandwidth 1M max 1M
queue kam_ackq parent rootq bandwidth 1M max 1M

#default drop rules
block log all

#ext rules
#<ruleset id="00000" description="Default ICMP rules" eol="20230101">
pass in log quick on $ext_if inet proto icmp from any to <wormhole>
pass out log quick on $ext_if inet proto icmp from { $lan_net, $wls_net, $dmz_net, $kam_net, $ext_ip } to any nat-to <wormhole>
#</ruleset>

#lan rules
#<ruleset id="10000" description="Default ICMP rules" eol="20230101">
pass in log quick on $lan_if inet proto icmp from $lan_net to any
pass out log quick on $lan_if inet proto icmp from { $wls_net, $dmz_net, $cld_net $lan_ip } to $lan_net
#</ruleset>

#<ruleset id="10001" description="Allow lan to Sirius firewall for DNS resolving" eol="20230101">
pass in log quick on $lan_if inet proto { udp tcp } from $lan_net to $lan_ip port domain
#</ruleset>

#<ruleset id="10002" description="Allow lan to internet with trusted protocols" eol="20230101">
pass in log quick on $lan_if inet proto tcp from $lan_net to any port { ssh, www, https, nicname }
pass out log quick on $ext_if inet proto tcp from $lan_net to any port { ssh, www, https, nicname } nat-to <wormhole> set queue (lanq, lan_ackq)
#</ruleset>

#<ruleset id="10003" description="Allow lan to dmz with trusted protocols" eol="20230101">
pass in log quick on $lan_if inet proto tcp from $lan_net to $dmz_net port { ssh, www, https, imaps, smtp, telnet }
pass out log quick on $dmz_if inet proto tcp from $lan_net to $dmz_net port { ssh, www, https, imaps, smtp, telnet }
#</ruleset>

#<ruleset id="10004" description="Allow lan to cld for trusted protocols" eol="20230101">
pass in log quick on $lan_if inet proto tcp from $lan_net to $cld_net port { ssh }
pass out log quick on $cld_if inet proto tcp from $lan_net to $cld_net port { ssh }
#</ruleset>

#<ruleset id="10005" description="Allow lan to Sirius firewall with NTP" eol="20230101">
pass in log quick on $lan_if inet proto udp from $lan_net to $lan_ip port ntp
#</ruleset>

#<ruleset id="10004" description="Allow lan to Alnitak for Vault" eol="20230101">
pass in log quick on $lan_if inet proto tcp from $lan_net to <alnitak> port vault
pass out log quick on $dmz_if inet proto tcp from $lan_net to <alnitak> port vault
#</ruleset>

#<ruleset id="10005" description="Allow lan to Alnitak for Home Assistant" eol="20230101">
pass in log quick on $lan_if inet proto tcp from $lan_net to <alnitak> port 8123
pass out log quick on $dmz_if inet proto tcp from $lan_net to <alnitak> port 8123
#</ruleset>

#wls rules
#<ruleset id="20000" description="Default ICMP rules" eol="20230101">
pass in log quick on $wls_if inet proto icmp from $wls_net to any
pass out log quick on $wls_if inet proto icmp from { $lan_net $dmz_net $cld_net, $wls_ip } to $wls_net
#</ruleset>

#<ruleset id="20001" description="Allow wls to Sirius firewall for DNS resolving" eol="20230101">
pass in log quick on $wls_if inet proto { udp tcp } from $wls_net to $wls_ip port domain
#</ruleset>

#<ruleset id="20002" description="Allow wls freely to internet mainly for Chromecast to work properly" eol="20230101">
pass in log quick on $wls_if inet proto { udp, tcp } from $wls_net to any
pass out log quick on $ext_if inet proto { udp, tcp } from $wls_net to any nat-to <wormhole> set queue (wlsq, wls_ackq)
#</ruleset>

#<ruleset id="20005" description="Allow wls to Sirius firewall with NTP" eol="20230101">
pass in log quick on $wls_if inet proto udp from $wls_net to $wls_ip port ntp
#</ruleset>

#<ruleset id="20006" description="Allow wls to Alnitak for Home Assistant" eol="20230101">
pass in log quick on $wls_if inet proto tcp from $wls_net to <alnitak> port 8123
pass out log quick on $dmz_if inet proto tcp from $wls_net to <alnitak> port 8123
#</ruleset>

#dmz rules
#<ruleset id="30000" description="Default ICMP rules" eol="20230101">
pass in log quick on $dmz_if inet proto icmp from $dmz_net to any
pass out log quick on $dmz_if inet proto icmp from { $lan_net $wls_net $cld_net, $dmz_ip } to $dmz_net
#</ruleset>

#<ruleset id="30001" description="Allow dmz to Sirius firewall for DNS resolving" eol="20230101">
pass in log quick on $dmz_if inet proto { udp tcp } from $dmz_net to $dmz_ip port domain
#</ruleset>

#<ruleset id="30002" description="Allow dmz to trusted destinations with trusted protocols for updates" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from $dmz_net to { <rocky_mirrors>, <freebsd_mirrors> <python_mirrors> } port { www, https }
pass out log quick on $ext_if inet proto tcp from $dmz_net to { <rocky_mirrors>, <freebsd_mirrors> <python_mirrors> } port { www, https } nat-to <wormhole> set queue (dmzq, dmz_ackq)
#</ruleset>

#<ruleset id="30003" description="Allow dmz to Sirius firewall with NTP" eol="20230101">
pass in log quick on $dmz_if inet proto udp from $dmz_net to $dmz_ip port ntp
#</ruleset>

#<ruleset id="30004" description="Allow dmz to Sirius firewall with SSH" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from $dmz_net to $dmz_ip port ssh
#</ruleset>

#<ruleset id="30005" description="Allow Naos to Algol and Antares with SMTP for sending email" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <naos> to { <algol>, <antares> } port smtp
pass out log quick on $cld_if inet proto tcp from <naos> to { <algol>, <antares> } port smtp
#</ruleset>

#<ruleset id="30006" description="Allow Naos to OpeBSD mirrors for software and updates" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <naos> to <openbsd_mirrors> port https
pass out log quick on $ext_if inet proto tcp from <naos> to <openbsd_mirrors> port https nat-to <wormhole> set queue (dmzq, dmz_ackq)
#</ruleset>

#<ruleset id="30007" description="Allow Alnitak to Hashicorp for Vault software and updates" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <hashicorp_vault> port https
pass out log quick on $ext_if inet proto tcp from <alnitak> to <hashicorp_vault> port https nat-to <wormhole> set queue (dmzq, dmz_ackq)
#</ruleset>

#<ruleset id="30008" description="Allow Alnitak to Home Assistant for software and updates" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to { <homeassistant_mirrors>, <philips_hue>, <weather_api> } port { www, https }
pass out log quick on $ext_if inet proto tcp from <alnitak> to { <homeassistant_mirrors>, <philips_hue>, <weather_api> } port { www, https } nat-to <wormhole> set queue (dmzq, dmz_ackq)

#<ruleset id="30009" description="Allow dmz to Github for software and packages" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from $dmz_net to <github> port https
pass out log quick on $ext_if inet proto tcp from $dmz_net to <github> port https nat-to <wormhole> set queue (dmzq, dmz_ackq)
#</ruleset>

#<ruleset id="30010" description="Allow lan to Procyon Prometheus" eol="20230101">
pass in log quick on $lan_if inet proto tcp from $lan_net to <procyon> port { 9090, 3000 }
pass out log quick on $dmz_if inet proto tcp from $lan_net to <procyon> port { 9090, 3000 }
#</ruleset>

#<ruleset id="30011" description="Allow Procyon to grafana for Grafana software packages" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <procyon> to <grafana> port https
pass out log quick on $ext_if inet proto tcp from <procyon> to <grafana> port https nat-to <wormhole> set queue (dmzq, dmz_ackq)
#</ruleset>

#<ruleset id="30012" description="Allow alnitak (Home Assistant) to sun (philips hue) for light control" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <sun> port { www, https }
pass out log quick on $wls_if inet proto tcp from <alnitak> to <sun> port { www, https }
#</ruleset>

#<ruleset id="30013" description="Allow alnitak (Home Assistant) to Vega (Philips TV) for control" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <vega> port { 1925, 1926 }
pass out log quick on $wls_if inet proto tcp from <alnitak> to <vega> port { 1925, 1926 }
#</ruleset>

#<ruleset id="30014" description="Allow Procyon to Elastic for Logstash software packages" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <procyon> to <elastic_repo> port { www, https }
pass out log quick on $ext_if inet proto tcp from <procyon> to <elastic_repo> port { www, https } nat-to <wormhole> set queue (dmzq, dmz_ackq)
#</ruleset>

#<ruleset id="30015" description="Allow Altair to Borgbase for remote backups" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <altair> to <borgbase> port ssh
pass out log quick on $ext_if inet proto tcp from <altair> to <borgbase> port ssh nat-to <wormhole> set queue (dmzq, dmz_ackq)
#</ruleset>

#cld rules
#<ruleset id="20000" description="Default ICMP rules" eol="20230101">
pass in log quick on $cld_if inet proto icmp from $cld_net to any
pass out log quick on $cld_if inet proto icmp from { $lan_net $dmz_net $cld_net, $cld_ip } to $cld_net
#</ruleset>

#<ruleset id="40001" description="Allow Algol and Antares to Naos mail server for mail delivery" eol="20230101">
pass in log quick on $cld_if inet proto tcp from { <algol>, <antares> } to <naos> port smtp
pass out log quick on $dmz_if inet proto tcp from { <algol>, <antares> } to <naos> port smtp
#</ruleset>

#<ruleset id="40002" description="Allow cld to Sirius firewall dmz interface with NTP" eol="20230101">
pass in log quick on $cld_if inet proto udp from $cld_net to $dmz_ip port ntp
#</ruleset>

#<ruleset id="40003" description="Allow procyon and Antares and Algol for Promentheus monitoring" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <procyon> to { <algol>, <antares> } port 9100
pass out log quick on $cld_if inet proto tcp from <procyon> to { <algol>, <antares> } port 9100
#</ruleset>

#<ruleset id="40004" description="Allow Algol and Antares to Procyon for syslog delevery" eol="20230101">
pass in log quick on $cld_if inet proto tcp from { <algol>, <antares> } to <procyon> port 514
pass out log quick on $dmz_if inet proto tcp from { <algol>, <antares> } to <procyon> port 514
#</ruleset>

#kam rules
#<ruleset id="60001" description="Default ICMP rules only allow connections to the internet not wls, lan and dmz network" eol="20230101">
pass out log quick on $kam_if inet proto icmp from $kam_ip to $kam_net
#</ruleset>

#<ruleset id="60003" description="Allow kam network to the internet with all protocols and ports freely and without logging" eol="20230101">
pass in quick on $kam_if from $kam_net to any
pass out quick on $ext_if from $kam_net to any nat-to <wormhole> set queue (kamq, kam_ackq)
#</ruleset>

#Sirius host rules
#<ruleset id="60000" description="Allow SSH access from lan network to Sirius" eol="20230101">
pass in log quick on $lan_if inet proto tcp from $lan_net to $lan_ip port ssh
#</ruleset>

#<ruleset id="60001" description="Allow all traffic between Wormhole, Blackhole and Quasar" eol="20230101">
pass in log quick on $ext_if from { <quasar> <blackhole> } to <wormhole> 
pass out log quick on $ext_if from <wormhole> to { <blackhole> <quasar> }
#</ruleset>

#<ruleset id="60002" description="Allow Sirius to internet for domain resolving" eol="20230101">
pass out log quick on $ext_if inet proto { tcp udp } from $ext_ip to any port domain
#</ruleset>

#<ruleset id="60003" description="Allow sirius to specific destinations for updates and packages" eol="20230101">
pass out log quick on $ext_if inet proto tcp from $ext_ip to { <openbsd_mirrors> } port { www, https }
#</ruleset>

#<ruleset id="60002" description="Allow Sirius to internet with NTP service" eol="20230101">
pass out log quick on $ext_if inet proto udp from $ext_ip to any port ntp
#</ruleset>

#<ruleset id="60003" description="Allow Procyon to Sirius port 9100 for Prometheus monitoring" eol="20230101">
pass in log quick on $dmz_if inet proto tcp from <procyon> to $dmz_if port 9100
#</ruleset>

#<ruleset id="60004" description="Allow Sirius to Procyon for syslog" eol="20230101">
pass out log quick on $dmz_if inet proto tcp from $dmz_ip to <procyon> port 514
#</ruleset>

#------------------------------------------------------------------------------
#Copyright (c) 2017 by {{ name }} - {{ company }}
#------------------------------------------------------------------------------
