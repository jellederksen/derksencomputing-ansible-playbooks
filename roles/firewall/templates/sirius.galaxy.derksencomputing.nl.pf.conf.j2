#Ansible information:
#    Filename: {{ template_path | regex_replace(".*/ansible[^/]*", "..") }}
#    Filedate: {{ template_mtime | regex_replace("\..*$", "")  }}
#    Hostname: {{ template_host }}

#macros
cld_if="enc0"
dmz_if="vio3"
ext_if="pppoe0"
kam_if="vio4"
lan_if="vio1"
mgt_if="vio5"
wls_if="vio2"
wgt_if="wg0"

cld_ip="172.16.1.1"
dmz_ip="172.16.0.1"
ext_ip="45.83.232.124"
kam_ip="192.168.0.1"
lan_ip="10.0.0.1"
mgt_ip="172.16.2.1"
wls_ip="10.0.1.1"
wgt_ip="10.0.2.1"

cld_net="172.16.1.0/24"
dmz_net="172.16.0.0/24"
ext_net="45.83.232.124/32"
kam_net="192.168.0.0/24"
lan_net="10.0.0.0/24"
mgt_net="172.16.2.0/24"
wls_net="10.0.1.0/24"
wgt_net="10.0.2.0/24"

#cld network
table <algol> { 172.16.1.1 } #Mail/DNS cloud VPS (External blackhole)
table <antares> { 172.16.1.2 } #Mail/DNS cloud VPS (External quasar)

#dmz network
table <sirius> { 172.16.0.1 } #Firewall/DNS/VPN/DHCP server VM
table <alnitak> { 172.16.0.2 } #container server VM
table <naos> { 172.16.0.3 } #Mail server VM
table <altair> { 172.16.0.4 } #File server VM

#ext network (The external IP-adresses / servers that make up the derksencomputing.nl network)
table <blackhole> { 46.23.93.156 } #Algol
table <quasar> { 46.23.93.162 } #Alnitak
table <wormhole> { 45.83.232.124 } #Sirius

#lan network
table <megrez> { 10.0.0.2 } #Desktop office computer

#wgt network
table <solaris> { 10.0.2.2 }

#mgt network
table <alcor> { 172.16.2.3 } #Hypervisor physical server
table <izar> { 172.16.2.3 } #Physical Cisco C1000 core switch
table <mizar> { 172.16.2.2 } #Hypervisor physical server IPMI interface alias ipmi.galaxy.derksencomputing.nl
table <shelly> { 172.16.2.7, 172.16.2.8, 172.16.2.9 172.16.2.10, 172.16.2.11, 172.16.2.12, 172.16.2.13 } #Power outlet controllers
table <capella> { 172.16.2.7 } # Shelly power outlet controller room_tv
table <betelgeuse> { 172.16.2.8 } # Shelly power outlet controller server
table <meissa> { 172.16.2.9 } # Shelly power outlet controller room_lights
table <saiph> { 172.16.2.10 } # Shelly power outlet controller room_play_lights_phone
table <hamal> { 172.16.2.11 } # Shelly power outlet controller office desktop
table <alberio> { 172.16.2.12 } # Shelly power outlet controller office_lights
table <pollux> { 172.16.2.13 } # Shelly power outlet controller office_heater
table <sun> { 172.16.2.14 } #Elgato keylight office
table <vela> { 172.16.2.5 } #Cisco wireless controller ip
# accesspoint ipadressses 1..4

#wls network
table <vega> { 10.0.1.3 } #Philips TV room
table <rigel> { 10.0.1.4 } #Philips soundbar

# Internet services for internet restricted networks
table <elastic_repo> { 34.120.127.130 }
table <grafana> { 151.101.38.217 }
table <hashicorp_vault> { 18.239.69.92 18.239.69.104 18.239.69.124 18.239.69.29 }
table <openbsd_mirrors> { 151.101.2.217, 151.101.66.217, 151.101.130.217, 151.101.194.217, 145.220.21.40, 151.101.38.217 151.101.39.52 }
table <rocky_mirrors> { 151.101.38.132, 185.31.172.243, 79.142.64.7, 31.214.178.54 }
table <fedora_mirrors> { 152.19.134.142, 38.145.60.21, 67.219.144.68, 140.211.169.196, 38.145.60.20, 152.19.134.198, 34.221.3.152, 8.43.85.67, 8.43.85.73, 145.220.21.40, 5.79.108.33 }
table <freebsd_mirrors> { 204.15.11.69 163.237.247.16 76.223.89.23 13.248.205.9 }
table <docker_mirrors> { 34.226.69.105, 3.219.239.5, 104.16.101.207, 95.101.74.121 }
table <github> { 185.199.109.133, 185.199.110.133, 185.199.108.133, 185.199.111.133 }

#options
set block-policy return
set debug emerg
set limit states 10000
set loginterface $ext_if
set optimization normal
set reassemble yes
set skip on lo0
set state-policy if-bound

match in all scrub (random-id)

#default drop rules
block log all

# We sort firewall rules based on the connection initiator or source. For
# Example: connections from the lan network with a destination in the DMZ
# network are sorted under "lan rules". Connections from the DMZ to the
# internet for updates is sorted under "dmz rules".

#ext rules
#<ruleset id="00001" description="Default ICMP rules" eol="20250101">
pass in log quick on $ext_if inet proto icmp from any to <wormhole>
pass out log quick on $ext_if inet proto icmp from { $ext_ip, $lan_net, $wls_net, $dmz_net, $kam_net, $mgt_net, $wgt_net } to any nat-to <wormhole>
#</ruleset>

#<ruleset id="00002" description="Allow roadwarriors to wireguard for VPN service" eol="20250101">
pass in log quick on $ext_if inet proto udp from any to <wormhole> port 51820
pass out log quick on $ext_if inet proto udp from <wormhole> to any port 51820
#</ruleset>

#lan rules
#<ruleset id="10001" description="Default ICMP rules" eol="20250101">
pass in log quick on $lan_if inet proto icmp from $lan_net to any
pass out log quick on $lan_if inet proto icmp from { $lan_ip, $wls_net, $dmz_net, $cld_net $mgt_net, $wgt_net } to $lan_net
#</ruleset>

#<ruleset id="10002" description="Allow lan to Sirius firewall for firewall services" eol="20250101">
pass in log quick on $lan_if inet proto udp from $lan_net to $lan_ip port { ntp, bootps }
pass in log quick on $lan_if inet proto { tcp, udp } from $lan_net to $lan_ip port { domain }
pass in log quick on $lan_if inet proto { tcp } from $lan_net to $lan_ip port { ssh }
#</ruleset>

#<ruleset id="10003" description="Allow lan to internet with trusted protocols" eol="20250101">
pass in log quick on $lan_if inet proto tcp from $lan_net to any port { ssh, www, https, nicname, 6443 }
pass out log quick on $ext_if inet proto tcp from $lan_net to any port { ssh, www, https, nicname, 6443 } nat-to <wormhole>
#</ruleset>

#<ruleset id="10004" description="Allow lan to dmz with trusted protocols" eol="20250101">
pass in log quick on $lan_if inet proto tcp from $lan_net to $dmz_net port { ssh, www, https }
pass out log quick on $dmz_if inet proto tcp from $lan_net to $dmz_net port { ssh, www, https }
#</ruleset>

#<ruleset id="10005" description="Allow lan to Naos for mail" eol="20250101">
pass in log quick on $lan_if inet proto tcp from $lan_net to <naos> port { imaps, smtp }
pass out log quick on $dmz_if inet proto tcp from $lan_net to <naos> port { imaps, smtp }
#</ruleset>

#<ruleset id="10006" description="Allow lan to Alnitak for www and https reverse proxy for all services and domain for pyhole" eol="20250101"> # tmp 8920 jellyfin port
pass in log quick on $lan_if inet proto tcp from $lan_net to <alnitak> port { www, https, 8920 }
pass out log quick on $dmz_if inet proto tcp from $lan_net to <alnitak> port { www, https, 8920 }
pass in log quick on $lan_if inet proto { udp, tcp } from $lan_net to <alnitak> port domain
pass out log quick on $dmz_if inet proto { udp, tcp } from $lan_net to <alnitak> port domain
#</ruleset>

#<ruleset id="10007" description="Allow lan to cld with trusted protocols" eol="20250101">
pass in log quick on $lan_if inet proto tcp from $lan_net to $cld_net port { ssh }
pass out log quick on $cld_if inet proto tcp from $lan_net to $cld_net port { ssh }
#</ruleset>

#<ruleset id="10008" description="Allow lan to mgt with trusted protocols" eol="20250101">
pass in log quick on $lan_if inet proto tcp from $lan_net to $mgt_net port { ssh, www, https }
pass out log quick on $mgt_if inet proto tcp from $lan_net to $mgt_net port { ssh, www, https }
#</ruleset>

#wls rules
#<ruleset id="20001" description="Default ICMP rules" eol="20250101">
pass in log quick on $wls_if inet proto icmp from $wls_net to any
pass out log quick on $wls_if inet proto icmp from { $lan_net $dmz_net $cld_net, $mgt_net, $wgt_net } to $wls_net
#</ruleset>

#<ruleset id="20002" description="Allow wls to Sirius firewall for firewall services" eol="20250101">
pass in log quick on $wls_if inet proto udp from $wls_net to $wls_ip port { ntp, bootps }
pass in log quick on $wls_if inet proto { tcp, udp } from $wls_net to $wls_ip port { domain }
#</ruleset>

#<ruleset id="20003" description="Allow wls to wormhole with wireguard" eol="20250101">
pass in log quick on $wls_if inet proto udp from $wls_net to <wormhole> port { wireguard }
#</ruleset>

#<ruleset id="20004" description="Allow wls to dmz with trusted protocols" eol="20250101">
pass in log quick on $wls_if inet proto tcp from $wls_net to $dmz_net port { imaps, smtp, homeassistant }
pass out log quick on $dmz_if inet proto tcp from $wls_net to $dmz_net port { imaps, smtp, homeassistant }
#</ruleset>

#<ruleset id="20005" description="Allow vega (Philps TV) to the internet for streaming services (we need access tcp and udp and all ports)" eol="20250101">
pass in log quick on $wls_if inet proto { tcp, udp } from <vega> to any 
pass out log quick on $ext_if inet proto { tcp, udp } from <vega> to any nat-to <wormhole>
#</ruleset>

#<ruleset id="20006" description="Allow wls to internet with trusted protocols" eol="20250101">
pass in log quick on $wls_if inet proto tcp from $wls_net to any port { www, https }
pass out log quick on $ext_if inet proto tcp from $wls_net to any port { www, https } nat-to <wormhole>
#</ruleset>

#<ruleset id="20007" description="Allow wls network to alnitak for reverse proxy for all services and domain for dns" eol="20250101"> # tmp jellyfin port
pass in log quick on $wls_if inet proto tcp from $wls_net to <alnitak> port { www, https, 8920 }
pass out log quick on $dmz_if inet proto tcp from $wls_net to <alnitak> port { www, https, 8920 }
pass in log quick on $wls_if inet proto { udp, tcp } from $wls_net to <alnitak> port domain
pass out log quick on $dmz_if inet proto { udp, tcp } from $wls_net to <alnitak> port domain
#</ruleset>

#<ruleset id="20008" description="Allow wls to internet free to test macbook internet" eol="20250101">
pass in log quick on $wls_if from $wls_net to any 
pass out log quick on $ext_if from $wls_net to any nat-to <wormhole>
#</ruleset>

#dmz rules
#<ruleset id="30001" description="Default ICMP rules" eol="20250101">
pass in log quick on $dmz_if inet proto icmp from $dmz_net to any
pass out log quick on $dmz_if inet proto icmp from { $dmz_ip, $lan_net $wls_net $cld_net, $mgt_net, $wgt_net } to $dmz_net
#</ruleset>

#<ruleset id="30002" description="Allow dmz to Sirius firewall for firewall services" eol="20250101">
pass in log quick on $dmz_if inet proto udp from $dmz_net to $dmz_ip port { ntp, bootps }
pass in log quick on $dmz_if inet proto { tcp, udp } from $dmz_net to $dmz_ip port { domain }
#</ruleset>

#<ruleset id="30003" description="Allow Naos to Algol and Antares with SMTP for sending email" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <naos> to { <algol>, <antares> } port smtp
pass out log quick on $cld_if inet proto tcp from <naos> to { <algol>, <antares> } port smtp
#</ruleset>

#<ruleset id="30004" description="Allow Alnitak to Hashicorp for Vault software and updates" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <hashicorp_vault> port https
pass out log quick on $ext_if inet proto tcp from <alnitak> to <hashicorp_vault> port https nat-to <wormhole>
#</ruleset>

#<ruleset id="30005" description="Allow alnitak (Home Assistant) to Vega (Philips TV) for control" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <vega> port { 1925, 1926 }
pass out log quick on $wls_if inet proto tcp from <alnitak> to <vega> port { 1925, 1926 }
pass in log quick on $dmz_if inet proto udp from <alnitak> to <vega> port 9
pass out log quick on $wls_if inet proto udp from <alnitak> to <vega> port 9
#</ruleset>

#<ruleset id="30006" description="Allow alnitak (Home Assistant) to sun (key light) for control" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <sun> port 9123
pass out log quick on $mgt_if inet proto tcp from <alnitak> to <sun> port 9123
#</ruleset>

#<ruleset id="30007" description="Allow alnitak (Home Assistant) to megrez Wake Up on Lan (WOL)" eol="20250101">
pass in log quick on $dmz_if inet proto udp from <alnitak> to <megrez> port 9
pass out log quick on $lan_if inet proto udp from <alnitak> to <megrez> port 9
#</ruleset>

#<ruleset id="30008" description="Allow alnitak to shelly1pm for energy mangement via home assistant" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <shelly> port { www, https }
pass out log quick on $mgt_if inet proto tcp from <alnitak> to <shelly> port { www, https }
#</ruleset>

#<ruleset id="30009" description="Allow Alnitak to Rocky Linux server for software updates" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to { <rocky_mirrors>, <fedora_mirrors> } port { www, https }
pass out log quick on $ext_if inet proto tcp from alnitak to { <rocky_mirrors>, <fedora_mirrors> } port { www, https } nat-to <wormhole>
#</ruleset>

#<ruleset id="30010" description="Allow OpenBSD hosts to OpenBSD mirror servers for software updates" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <naos> to <openbsd_mirrors> port https
pass out log quick on $ext_if inet proto tcp from <naos> to <openbsd_mirrors> port https nat-to <wormhole>
#</ruleset>

#<ruleset id="30011" description="Allow FreeBSD hosts to FreeBSD mirror servers for software updates" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <altair> to <freebsd_mirrors> port www
pass out log quick on $ext_if inet proto tcp from <altair> to <freebsd_mirrors> port www nat-to <wormhole>
#</ruleset>

#<ruleset id="30012" description="Allow Alnitak to docker hosts for pulling container images" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <docker_mirrors> port https
pass out log quick on $ext_if inet proto tcp from <alnitak> to <docker_mirrors> port https nat-to <wormhole>
#</ruleset>

#<ruleset id="30013" description="Allow Alnitak to github hosts for updating pi-hole lists" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <github> port https
pass out log quick on $ext_if inet proto tcp from <alnitak> to <github> port https nat-to <wormhole>
#</ruleset>

#<ruleset id="30014" description="Allow alnitak (Home Assistant) to alcor (hypervisor) for NUT service" eol="20250101">
pass in log quick on $dmz_if inet proto tcp from <alnitak> to <alcor> port 3493
pass out log quick on $mgt_if inet proto tcp from <alnitak> to <alcor> port 3493
#</ruleset>

#cld rules
#<ruleset id="40001" description="Default ICMP rules" eol="20250101">
pass in log quick on $cld_if inet proto icmp from $cld_net to any
pass out log quick on $cld_if inet proto icmp from { $cld_ip, $lan_net $dmz_net, $mgt_net, $wgt_net } to $cld_net
#</ruleset>

#<ruleset id="40002" description="Allow cld to Sirius firewall for firewall services" eol="20250101">
pass in log quick on $cld_if inet proto udp from $cld_net to $cld_ip port { ntp }
pass in log quick on $lan_if inet proto { tcp, udp } from $cld_net to $cld_ip port { domain }
#</ruleset>

#<ruleset id="40003" description="Allow Algol and Antares to Naos mail server for mail delivery" eol="20250101">
pass in log quick on $cld_if inet proto tcp from { <algol>, <antares> } to <naos> port smtp
pass out log quick on $dmz_if inet proto tcp from { <algol>, <antares> } to <naos> port smtp
#</ruleset>

#kam rules
#<ruleset id="50001" description="Default ICMP rules only allow connections to the internet not wls, lan, mgt, dmz, or wgt network" eol="20250101">
pass in log quick on $kam_if inet proto icmp from $kam_net to any
pass out log quick on $kam_if inet proto icmp from $kam_ip to $kam_net
#</ruleset>

#<ruleset id="50002" description="Allow kam to Sirius firewall for firewall services" eol="20250101">
pass in log quick on $kam_if inet proto udp from $kam_net to $kam_ip port { ntp }
pass in log quick on $kam_if inet proto { tcp, udp } from $kam_net to $kam_ip port { domain }
#</ruleset>

#<ruleset id="50003" description="Allow kam network to the internet with all protocols and ports freely and without logging" eol="20250101">
pass in quick on $kam_if from $kam_net to any
pass out quick on $ext_if from $kam_net to any nat-to <wormhole>
#</ruleset>

#mgt rules
#<ruleset id="60001" description="Default ICMP rules" eol="20250101">
pass in log quick on $mgt_if inet proto icmp from $mgt_net to any
pass out log quick on $mgt_if inet proto icmp from { $mgt_ip, $lan_net $wls_net $cld_net, $dmz_net $wgt_net } to $mgt_net
#</ruleset>

#<ruleset id="60002" description="Allow mgt to Sirius firewall for firewall services" eol="20250101">
pass in log quick on $mgt_if inet proto udp from $mgt_net to $mgt_ip port { ntp }
pass in log quick on $mgt_if inet proto { tcp, udp } from $mgt_net to $mgt_ip port { domain }
#</ruleset>

#<ruleset id="60003" description="Allow Alcor to trusted destinations with trusted protocols for updates" eol="20250101">
pass in log quick on $mgt_if inet proto tcp from <alcor> to { <rocky_mirrors>, <fedora_mirrors> } port { www, https }
pass out log quick on $ext_if inet proto tcp from <alcor> to { <rocky_mirrors>, <fedora_mirrors> } port { www, https } nat-to <wormhole>
#</ruleset>

# wgt rules
#<ruleset id="80001" description="Default ICMP rules" eol="20250101">
pass in log quick on $wgt_if inet proto icmp from $wgt_net to any
pass out log quick on $wgt_if inet proto icmp from { $wgt_ip, $wls_net, $dmz_net, $cld_net $lan_net, $mgt_net } to $wgt_net
#</ruleset>

#<ruleset id="80002" description="Allow all traffic to the internet from Wireguard network" eol="20250101">
pass in log quick on $wgt_if from $wgt_net to any
pass out log quick on $ext_if from $wgt_net to any nat-to <wormhole>
#</ruleset>

#<ruleset id="80003" description="Allow Jelle's phone to alnitak for reverse proxy to all services" eol="20250101"> # tmp jellyfin port
pass in log quick on $wgt_if inet proto tcp from <solaris> to <alnitak> port { www, https, 8920 }
pass out log quick on $dmz_if inet proto tcp from $wgt_net to <alnitak> port { www, https, 8920 }
#</ruleset>

#Sirius host rules
#<ruleset id="90003" description="Allow all traffic between Wormhole, Blackhole and Quasar" eol="20250101">
pass in log quick on $ext_if from { <quasar> <blackhole> } to <wormhole>
pass out log quick on $ext_if from <wormhole> to { <blackhole> <quasar> }
#</ruleset>

#<ruleset id="90004" description="Allow Sirius to internet for domain resolving" eol="20250101">
pass out log quick on $ext_if inet proto { tcp udp } from $ext_ip to any port domain
#</ruleset>

#<ruleset id="90005" description="Allow sirius to specific destinations for updates and packages" eol="20250101">
pass out log quick on $ext_if inet proto tcp from $ext_ip to { <openbsd_mirrors> } port { www, https }
#</ruleset>

#<ruleset id="90006" description="Allow Sirius to internet with NTP service" eol="20250101">
pass out log quick on $ext_if inet proto udp from $ext_ip to any port ntp
#</ruleset>

#------------------------------------------------------------------------------
#Copyright (c) 2017 by {{ name }} - {{ company }}
#------------------------------------------------------------------------------

